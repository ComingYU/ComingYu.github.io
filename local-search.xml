<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Head First Java学习</title>
    <link href="/2023/11/10/HeadFirstJava%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/11/10/HeadFirstJava%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Head-first-java学习"><a href="#Head-first-java学习" class="headerlink" title="Head first java学习"></a>Head first java学习</h1><h2 id="Java的程序结构"><a href="#Java的程序结构" class="headerlink" title="Java的程序结构"></a>Java的程序结构</h2><ul><li>类存在于源文件里，方法存在于类里，语句存在于方法中  </li><li>Java虚拟机启动执行时，会寻找在命令类所指定的类，然后锁定到main方法，每个Java程序都至少有一个类以及一个main()，每个应用程序只有一个main函数。</li><li>要执行程序就代表要命令JVM去加载这个类，开始执行他的main()，直到运行到main的所有程序代码结束。</li><li>真正被执行的是类。</li></ul><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><ul><li>Java不能直接用整数类型测试，例如：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> x=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(x)&#123;&#125;;<br></code></pre></td></tr></table></figure>Java中integer和Boolean两种类型并不相容，，这么写在Java中是不行的，但是在其他一些语言中可以。</li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li>字符串中不能直接打出换行，需要使用换行符\n，如果要直接打出换行要使用一对三重引号。</li></ul><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><ul><li><p>对象本身已知的事物被称为：实例变量<br>对象可以执行的动作称为：方法</p></li><li><p>类是对象的蓝图；它会告诉虚拟机如何创建某种类型的对象，根据类创建出的对象都会有自己的示例变量。</p></li><li><p>创建对象时，它会被存放于被称为堆的内存区域中，这个区域是回收垃圾的堆（Garbage-Collectible Heap），Java根据对象的大小分配空间，当某个对象被JVM察觉到不会再使用到时，该对象就会被标记为可回收的，如果内存开始不足，垃圾收集器就会启动，回收空间。</p></li><li><p>庞大文件的处理方法：将所有文件包装进一句pkzip格式来存档的.jar文件，jar文件中有一个简单的文字格式文字文件，被称为manifest定义有jar中有哪一个文件带有启动程序的main方法。</p></li><li><p>boolean类型数据的位数由Java虚拟机来决定，char16bits，byte、short、int、long的位数为8bits到64bits。</p></li><li><p>小数类型的数据除非加上f，不然都当作double类型处理</p></li><li><h3 id="对象的声名与创建的三个步骤："><a href="#对象的声名与创建的三个步骤：" class="headerlink" title="对象的声名与创建的三个步骤："></a>对象的声名与创建的三个步骤：</h3><p>例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">Dog myDog=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Dog</span>();<br></code></pre></td></tr></table></figure></li></ul><ol><li>声名引用变量（Dog myDog）:要求Java虚拟机分配空间给引用变量，并将此变量命名为myDog，此引用变量将被固定为Dog类型。</li><li>创建对象（new Dog（））：要求Java虚拟机分配堆空间给新建立的Dog对象。</li><li>连接对象和引用（&#x3D;）：将创建的Dog对象赋值给myDog这个引用。</li></ol><ul><li>对于任意一个Java虚拟机来说，所有的对象引用的大小都是一样的，但不同的Java虚拟机可能用不同的方式来表示引用，所以大小可能不相同。</li><li>当对象没有引用时，被作为垃圾收集器，内存不足时被回收。</li><li><h3 id="数组变量："><a href="#数组变量：" class="headerlink" title="数组变量："></a>数组变量：</h3>数组是一个对象，不论里面放的是primitive主数据类型还是引用变量，一旦数组被声名，就只能装入所声名类型的元素（除了byte元素可以放进int数组中）</li></ul><h3 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h3><ol><li>变量有两种：primitive主数据类型和引用类型</li><li>引用变量的值代表位于堆的对象的存取方法</li><li>primitive主数据类型变量值是该值的字节所表示的</li></ol><h2 id="对象的行为"><a href="#对象的行为" class="headerlink" title="对象的行为"></a>对象的行为</h2>]]></content>
    
    
    <categories>
      
      <category>语言学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学习记录</title>
    <link href="/2023/11/10/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/11/10/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h1><p>（周六到下个周五为一周）  </p><h3 id="第一周（11-4-11-10）"><a href="#第一周（11-4-11-10）" class="headerlink" title="第一周（11.4-11.10）"></a>第一周（11.4-11.10）</h3><ol><li>headfirstjava学到60面</li><li>搭建了简单的个人博客</li><li>准备期中</li><li>抽芙琳娜，养芙琳娜（Doge）深刻反省！</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
